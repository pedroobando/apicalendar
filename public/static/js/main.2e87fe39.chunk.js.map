{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","routers/ProtectRouter.js","helpers/fetch.js","helpers/CalendarEvent.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.jsx","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","helpers/calendar-messages-es.js","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PrivateRouter","isAuthenticated","Component","component","rest","props","to","PublicRouter","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActive","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","removeItem","logout","checkingFinish","login","user","useForm","useState","values","setValues","handleInputChange","target","value","checked","name","reset","newFormState","linitialForm","lEmail","lPassword","rinitialForm","rName","rEmail","rPassword1","rPassword2","LoginScreen","useDispatch","formLoginValues","handleloginInputChange","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","dateNow","minutes","seconds","add","dataEnd","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","trim","length","closeModal","handleStartDateChange","eventDate","handleEndDateChange","handleSubmit","momentStart","momentEnd","isSameOrAfter","console","log","getState","_id","eventStartAddNew","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","minDate","autoComplete","rows","AddNewFab","React","memo","openModal","calendarmessageses","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","DeleteEventFab","handleDelete","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onSelectSlot","selectable","onView","view","components","AppRouter","exact","path","CalendarApp","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e87fe39.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  eventSetActive: '[event] Set active',\n  eventStartAddNew: '[event] Start add new',\n  eventAddNew: '[event] Add new',\n  eventClearActive: '[event] Clear active',\n  eventUpdated: '[event] Event update',\n  eventDeleted: '[event] Event delete',\n  eventLoaded: '[event] Event loaded',\n  eventLogout: '[event] Event logout',\n\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start Register',\n  authStartStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\n// {\n//   id: uuidv4(),\n//   title: 'Cumpleaños del jefe',\n//   start: moment().toDate(),\n//   end: moment().add(2, 'hour').toDate(),\n//   notes: 'Comprar la torta para el Jefe',\n//   bgcolor: '#fafafa',\n//   user: {\n//     _id: 123,\n//     name: 'Fernando',\n//   },\n// },\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [action.payload, ...state.events],\n        activeEvent: null,\n      };\n\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n\n    case types.eventClearActive:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    case types.eventLogout:\n      return {\n        ...initialState,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return { ...state, modalOpen: true };\n\n    case types.uiCloseModal:\n      return { ...state, modalOpen: false };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n","// import { createStore, applyMiddleware } from 'redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\n// const storeDev = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n// const storePrd = createStore(rootReducer, applyMiddleware(thunk));\n\n// export const store = process.env.NODE_ENV !== 'production' ? storeDev : storePrd;\n\n// const baseUrl = process.env.REACT_APP_API_URL;\n// console.log(process.env);\n// let store = createStore(rootReducer, applyMiddleware(thunk));\n// if (process.env.NODE_ENV==='development') {\n// }\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n// export const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRouter = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRouter.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport const PublicRouter = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPublicRouter.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchSinToken = (endpoint, data = {}, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport const fetchConToken = (endpoint, data = {}, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n  const token = localStorage.getItem('token') || '';\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n  // console.log(events);\n  return events.map((e) => ({\n    ...e,\n    end: moment(e.end).toDate(),\n    start: moment(e.start).toDate(),\n  }));\n};\n","import Swal from 'sweetalert2';\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/CalendarEvent';\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchConToken('events', event, 'POST');\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = { _id: uid, name };\n\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: { ...event },\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActive = () => ({\n  type: types.eventClearActive,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      // console.log(event);\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { activeEvent } = getState().calendar;\n    try {\n      const resp = await fetchConToken(`events/${activeEvent.id}`, {}, 'DELETE');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    // const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchConToken('events');\n      const body = await resp.json();\n      // const { events, ok } = body;\n\n      if (body.ok && body.events.length >= 1) {\n        const events = prepareEvents(body.events);\n        // console.log(events);\n        dispatch(eventLoaded(events));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n","import Swal from 'sweetalert2';\nimport { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { eventLogout } from './events';\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      Swal.fire('Error Autenticacion', body.msg, 'error');\n    }\n  };\n};\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\n    const body = await resp.json();\n\n    // console.log(body);\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      Swal.fire('Error Autenticacion', body.msg, 'error');\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken('auth/renew');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    // localStorage.clear();\n    localStorage.removeItem('token');\n    localStorage.removeItem('token-init-date');\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nconst logout = () => ({\n  type: types.authLogout,\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const handleInputChange = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    setValues({ ...values, [target.name]: value });\n  };\n\n  const reset = (newFormState = initialState) => {\n    setValues(newFormState);\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nconst linitialForm = {\n  lEmail: 'pedro@gmail.com',\n  lPassword: '123456',\n};\n\nconst rinitialForm = {\n  rName: 'carlos',\n  rEmail: 'carlos@gmail.com',\n  rPassword1: '123456',\n  rPassword2: '123456',\n};\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [formLoginValues, handleloginInputChange] = useForm(linitialForm);\n  const [formRegisterValues, handleRegisterInputChange] = useForm(rinitialForm);\n\n  const { lEmail, lPassword } = formLoginValues;\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n    // console.log(formLoginValues);\n  };\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Las contraseña debe ser iguales', 'error');\n    }\n    dispatch(startRegister(rEmail, rPassword1, rName));\n    // console.log(rName, rEmail, rPassword1, rPassword2);\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleloginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleloginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n\n  const { name } = useSelector((state) => state.auth);\n  const handleLogOut = () => {\n    dispatch(startLogout());\n  };\n  return (\n    <div>\n      <div className=\"navbar navbar-dark bg-dark mb-4\">\n        <span className=\"navbar-brand\">{name}</span>\n        <button className=\"btn btn-outline-danger btn-sm\" onClick={handleLogOut}>\n          <i className=\"fas fa-sign-out-alt\" />\n          <span> Salir</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n  return (\n    <div>\n      <strong>{title} </strong>-<span> {user.name}</span>\n    </div>\n  );\n};\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport moment from 'moment';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport '../../styles/modal.css';\nimport { uiCloseModal } from '../../actions/ui';\nimport {\n  eventClearActive,\n  eventStartAddNew,\n  eventStartUpdate,\n} from '../../actions/events';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root'); // esto es index.html =>  <div id=\"root\"></div>\n\nconst dateNow = moment().minutes(0).seconds(0).add(1, 'hours');\nconst dataEnd = dateNow.clone().add(1, 'hours');\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: dateNow.toDate(),\n  end: dataEnd.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const dispatch = useDispatch();\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n\n  const [dateStart, setDateStart] = useState(dateNow.toDate());\n  const [dateEnd, setDateEnd] = useState(dataEnd.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n\n    if ([target.name][0] === 'title' && target.value.trim().length > 1) {\n      setTitleValid(true);\n    }\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActive());\n    setFormValues(initEvent);\n  };\n\n  const handleStartDateChange = (eventDate) => {\n    setDateStart(eventDate);\n    setFormValues({\n      ...formValues,\n      start: eventDate,\n    });\n  };\n\n  const handleEndDateChange = (eventDate) => {\n    setDateEnd(eventDate);\n    setFormValues({\n      ...formValues,\n      end: eventDate,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\n        'Error',\n        'La fecha fin debe de ser mayor a la fecha inicio',\n        'error'\n      );\n    }\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    // TODO: realizar grabacion en base datos\n    setTitleValid(true);\n    closeModal();\n  };\n\n  const formBootstrap = () => (\n    <>\n      <h1>{!activeEvent ? 'Nuevo ' : 'Editando '} evento</h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={dateEnd}\n            minDate={dateStart}\n            className=\"form-control\"></DateTimePicker>\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'}`}\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"4\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </>\n  );\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\">\n      {formBootstrap()}\n    </Modal>\n  );\n};\n","import React from 'react';\n\nexport const AddNewFab = React.memo(({ openModal }) => {\n  return (\n    <button className=\"btn btn-primary fab\" onClick={openModal}>\n      <i className=\"fas fa-plus\" />\n    </button>\n  );\n});\n","export const calendarmessageses = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from 'react';\n\nexport const DeleteEventFab = React.memo(({ handleDelete }) => {\n  return (\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n      <i className=\"fas fa-trash\" />\n      <span> Borrar Evento</span>\n    </button>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { AddNewFab } from '../ui/AddNewFab';\n\nimport { uiOpenModal } from '../../actions/ui';\nimport {\n  eventClearActive,\n  eventSetActive,\n  eventStartDelete,\n  eventStartLoading,\n} from '../../actions/events';\n\nimport { calendarmessageses } from '../../helpers/calendar-messages-es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  const [lastView, setLastView] = useState(localStorage.getItem('lastview') || 'month');\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDobleClick = () => {\n    dispatch(uiOpenModal());\n  };\n\n  const onAddNewEvent = () => {\n    dispatch(uiOpenModal());\n  };\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  };\n\n  const onSelectEvent = (event) => {\n    dispatch(eventSetActive(event));\n  };\n\n  const onSelectSlot = () => {\n    // console.log(event);\n    dispatch(eventClearActive());\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: '0.8',\n      display: 'block',\n      color: 'white',\n    };\n\n    return { style };\n  };\n\n  const onViewChange = (event) => {\n    setLastView(event);\n    localStorage.setItem('lastview', event);\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={calendarmessageses}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDobleClick}\n        onSelectEvent={onSelectEvent}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        onView={onViewChange}\n        view={lastView}\n        components={{ event: CalendarEvent }}\n      />\n\n      {!!activeEvent && <DeleteEventFab handleDelete={handleDelete} />}\n\n      <AddNewFab openModal={onAddNewEvent} />\n      <CalendarModal />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\n\nimport { PrivateRouter, PublicRouter } from './ProtectRouter';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <h1>Espere ... </h1>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRouter\n            exact\n            isAuthenticated={!!uid}\n            path=\"/login\"\n            component={LoginScreen}\n          />\n          <PrivateRouter\n            exact\n            isAuthenticated={!!uid}\n            path=\"/\"\n            component={CalendarScreen}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles/index.css';\n\nrender(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}